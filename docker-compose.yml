version: "3.8"

networks:
  cw-net:
    driver: bridge
    ipam:
      config:
        - subnet: ${MONITOR_SUBNET}
    driver_opts:
      com.docker.network.bridge.name: cw-net

volumes:
  prometheus_data:
  loki_data:
  grafana_data:
  alertmanager_data:

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./configs/prometheus/alert-rules.yml:/etc/prometheus/alert-rules.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=${PROMETHEUS_RETENTION}"
    ports:
      - "${PROMETHEUS_PORT}:9090"
    networks:
      - cw-net
    dns:
      - ${DNS_SERVER}

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)"
    ports:
      - "${NODE_EXPORTER_PORT}:9100"
    networks:
      - cw-net
    dns:
      - ${DNS_SERVER}

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "${CADVISOR_PORT}:8080"
    networks:
      - cw-net
    dns:
      - ${DNS_SERVER}

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    volumes:
      - loki_data:/loki
    ports:
      - "${LOKI_PORT}:3100"
    networks:
      - cw-net
    dns:
      - ${DNS_SERVER}

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./configs/promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - cw-net
    dns:
      - ${DNS_SERVER}
    environment:
      - MONITOR_HOST=${MONITOR_HOST}

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./configs/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=${GRAFANA_ALLOW_SIGNUP}
    ports:
      - "${GRAFANA_PORT}:3000"
    networks:
      - cw-net
    dns:
      - ${DNS_SERVER}

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./configs/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./configs/alertmanager/templates:/etc/alertmanager/templates
      - alertmanager_data:/alertmanager
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
    ports:
      - "${ALERTMANAGER_PORT}:9093"
    networks:
      - cw-net
    dns:
      - ${DNS_SERVER}

  alertmanager-discord:
    image: benjojo/alertmanager-discord:latest
    container_name: alertmanager-discord
    restart: unless-stopped
    ports:
      - "9094:9094"
    environment:
      - DISCORD_WEBHOOK=${DISCORD_WEBHOOK}
    networks:
      - cw-net
    dns:
      - ${DNS_SERVER}
